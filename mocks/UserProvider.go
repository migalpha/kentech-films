// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	film "github.com/migalpha/kentech-films"
	mock "github.com/stretchr/testify/mock"
)

// UserProvider is an autogenerated mock type for the UserProvider type
type UserProvider struct {
	mock.Mock
}

// UserByID provides a mock function with given fields: _a0
func (_m *UserProvider) UserByID(_a0 film.UserID) (film.User, error) {
	ret := _m.Called(_a0)

	var r0 film.User
	if rf, ok := ret.Get(0).(func(film.UserID) film.User); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(film.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(film.UserID) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UserbyUsername provides a mock function with given fields: _a0
func (_m *UserProvider) UserbyUsername(_a0 film.Username) (film.User, error) {
	ret := _m.Called(_a0)

	var r0 film.User
	if rf, ok := ret.Get(0).(func(film.Username) film.User); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(film.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(film.Username) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
